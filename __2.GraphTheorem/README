OJ 1639 Pinic Planning
在一个不超过20个节点的无向图中，找到一个最小生成树T，T中P节点的度不能超过limit。
暴力+Kruskal 枚举P节点的边为最小生成树T上的边，P节点之外的边用Kruskal算法生成树，求枚举出的树中的最小值。

POJ 3155 Hard Life
给定一个无向图，要求获得一个子图，是子图的边数与子图的点数之商最大，即求最大密度子图。
分数规划+最小割 函数 h(g) = max(|E'|-g|V'|) 是一个单调递减函数，且当g大于等于最大密度D时，函数值为0，当h(g)小于D时，函数值大于0。于是可以用二分法，求最大密度D。max(|E'|-g|V'|) 可以通过构造最大权闭合图的方法来求得，即对于每条边构造一个点，并都向其两个端点连接一条边，然后源点s连接边构造的点，权值为1；端点连接汇点t，权值为g。求得改图的最小割c[S,T]，函数max(|E'|-g|V'|)则为|E'|-c[S,T]。由于函数h(g)比较怪异，所以每次二分值的时候，都要bfs或dfs残余网络，求出最大密度子图，如果该密度比原先的密度要大，则保留当前的密度子图为最优解。

POJ 2112 Optimal Milking
有K台挤奶器和C只奶牛，每台挤奶器最多每天给M头牛挤奶，给出挤奶器、奶牛之间路的距离，并且奶牛可以走多条路到达一个挤奶器。要求在满足挤奶器服务不多与M头牛的限制给每头牛挤奶，是得到挤奶器的最远的那头牛所走的距离最短。
floyd+二分+最大流 先用floyd求出K+C个节点的两两之间的最短距离，然后二分牛走的最远距离l。如果并把原来图中挤奶器到牛的最短距离小于等于l的边加入到新图中，并把源点s到各个挤奶器的边的容量设置为M，利用最大流，看是否能够给所有牛分配挤奶器。

POJ 1966 Cable TV Network
给定一个无向图，问最少删去多少个点，能使该图变为不连通的图。
枚举+最小割 把图中的每个点都拆分为两个点，并用一条权为1的内含边连接。枚举不连通图中的两个点i，j，并把它们的内含边权设置为无穷大，表示他们不能被删除。并把i，j分别与源点s和汇点t连接，求最小割c[S,T]，最小割的值即为，需要把i，j两点分开所需要删除的最小点数。

POJ 3281 Dining

POJ 1087 A Plug for UNIX

POJ 2289 Jamie's Contact Groups

POJ 3216 Repairing Company

POJ 2446 Chessboard

POJ 2729 Desert King

POJ 3164 Command Network
