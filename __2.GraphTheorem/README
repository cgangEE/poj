POJ 1639 Pinic Planning
在一个不超过20个节点的无向图中，找到一个最小生成树T，T中P节点的度不能超过limit。
暴力+Kruskal 枚举P节点的边为最小生成树T上的边，P节点之外的边用Kruskal算法生成树，求枚举出的树中的最小值。

POJ 3155 Hard Life
给定一个无向图，要求获得一个子图，是子图的边数与子图的点数之商最大，即求最大密度子图。
分数规划+最小割 函数 h(g) = max(|E'|-g|V'|) 是一个单调递减函数，且当g大于等于最大密度D时，函数值为0，当h(g)小于D时，函数值大于0。于是可以用二分法，求最大密度D。max(|E'|-g|V'|) 可以通过构造最大权闭合图的方法来求得，即对于每条边构造一个点，并都向其两个端点连接一条边，然后源点s连接边构造的点，权值为1；端点连接汇点t，权值为g。求得改图的最小割c[S,T]，函数max(|E'|-g|V'|)则为|E'|-c[S,T]。由于函数h(g)比较怪异，所以每次二分值的时候，都要bfs或dfs残余网络，求出最大密度子图，如果该密度比原先的密度要大，则保留当前的密度子图为最优解。

POJ 2112 Optimal Milking
有K台挤奶器和C只奶牛，每台挤奶器最多每天给M头牛挤奶，给出挤奶器、奶牛之间路的距离，并且奶牛可以走多条路到达一个挤奶器。要求在满足挤奶器服务不多与M头牛的限制给每头牛挤奶，是得到挤奶器的最远的那头牛所走的距离最短。
floyd+二分+最大流 先用floyd求出K+C个节点的两两之间的最短距离，然后二分牛走的最远距离l。如果并把原来图中挤奶器到牛的最短距离小于等于l的边加入到新图中，并把源点s到各个挤奶器的边的容量设置为M，利用最大流，看是否能够给所有牛分配挤奶器。

POJ 1966 Cable TV Network
给定一个无向图，问最少删去多少个点，能使该图变为不连通的图。
枚举+最小割 把图中的每个点都拆分为两个点，并用一条权为1的内含边连接。枚举不连通图中的两个点i，j，并把它们的内含边权设置为无穷大，表示他们不能被删除。并把i，j分别与源点s和汇点t连接，求最小割c[S,T]，最小割的值即为，需要把i，j两点分开所需要删除的最小点数。

POJ 3281 Dining
一共有N头牛、F种食物和D种饮料，每一种食物或饮料只能分配给一头牛，而且每头牛只吃特定种类的食物和饮料。问如何分配，使能吃到自己喜欢的一份食物和一份饮料的牛最多？
最大流 建图，从源点s分别连接一条容量为1的边到每一种食物，在从每一种食物连接边到喜欢吃该食物的牛上；把一头牛拆分为两点，两点用一条容量为1的边连接，每头牛一边的点与食物连接，另一边的点与喜欢喝的饮料连接；每种饮料再与汇点t连接一条容量为1的边。

POJ 1087 A Plug for UNIX
一个新闻发布会有很多不同种类的插座，而且每种插座的数量只有一个。记者们有很多电器，这些电器的插头需要插插座。还有一些种类的转换器，可以把一个插座转换为另一种插座，每种转换器是无限量的。问如何利用这些插座和转换器使得不能插上插座的插头最少。
最大流 建图，从源点s连接到每种插座一条容量为1的边；对于每个转换器连接一条从转换器的插头种类x到转换后的插座种类y一条容量为INF的边；对于记者的每个电器的插头种类，从与之相应的插座种类，连接一条到汇点t的容量为1的边；用最大流计算最多能匹配多少插头，用所有插头减去最多匹配的插头，即为最少不能匹配的插头数。

POJ 2289 Jamie's Contact Groups
Jamie有N个好友，他想把这N个好友分配到M个组中去；对于每个好友都有一些可以选择分配的组。问应该如何把每一个好友都分配到某一个可以分配的组中去，使得人数最多的组的人数最少。
最大流+二分答案 二分最大组的人数z，然后建图，设置每个小组的最大人数都为z；从源点s都向每一个好友连接一条权值为1的边，再从好友向可以选择的小组连接一条权值为1的边，最后从每个小组连接向汇点t连接一条权值为z的边；这样就可以用最大流来向每个好友来分配小组，如果最大流为n的话，那么说明n个用户都能分配到小组，说明最大组的人数z是可行的。用二分法搜索到最小的可行z即可。

POJ 3216 Repairing Company
有Q个区域，有一些需要一定时间通过的双向路把这些区域连接。有M个维修任务，维修任务有开始时间，和花费的时间，一个维修工一定要在任务开始之前赶到该区域维修，且每个维修工在同一时间只能维修一个任务。问最少要请多少个维修工？
floyd ; 最小路径覆盖 = n - 二分图最大匹配 先用floyd求出每个区域相互之间的最短距离。建一个M个节点的图，图上的边e<i,j>代表，一个维修工维修好i任务后，又可以去维修j任务；那最少要请的维修工就是用最少路径去覆盖这个图的数目；由于最小路径覆盖数 = 顶点数 - 二分图最大匹配数，于是我们可以构建一个二分图，二分图每边都有M个节点，如果在原图中存在边e<i,j>，那么也再二分图中添加从左边i节点到右边j节点的一条边，最后求出最大匹配即可。 

POJ 2446 Chessboard
给定一个N*M的棋盘，棋盘上有K个洞。问是否能够用1*2或2*1的骨牌覆盖所有不是洞的格子，且每个格子只能被一个骨牌覆盖。
Hungray二分图匹配 由于一个骨牌会覆盖一个坐标和为奇数和偶数的格子，所以坐标和为奇数格子只能和周围的坐标和为偶数的格子被同一块骨牌覆盖。因此该问题可以化为二分图匹配问题，二分图左边为坐标和为奇数的格子，右边为坐标和为偶数的格子，如果左边的格子和右边的格子相邻的话，那么在这两点之间连接一条边；用Hungray算法求得最大匹配，并判断是否是完全匹配。

POJ 2729 Desert King

POJ 3164 Command Network
